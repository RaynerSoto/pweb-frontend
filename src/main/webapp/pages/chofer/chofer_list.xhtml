<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:p="http://primefaces.org/ui">

<ui:composition template="/pages/template/layout.xhtml">
	<ui:define name="title">
		Listado de choferes
	</ui:define>
	<ui:define name="layout">
		<h:form id="form">
			<f:view locale="#{lenguageBean.locale}">
				<div class="card crud-demo">
					<p:toolbar>
						<p:toolbarGroup>
							<p:commandButton value="#{msgs.message_insertar_nuevo}" icon="pi pi-plus"
											 actionListener="#{choferBean.openNew}"
											 update=":form:chofer-content"
											 oncomplete="PF('choferDialog').show()"
											 styleClass="ui-button-success" style="margin-right: .5rem">
								<p:resetInput target=":form:chofer-content" />
							</p:commandButton>
						</p:toolbarGroup>
						<p:toolbarGroup align="right">
							<p:commandButton value="#{msgs.message_exportar}" icon="pi pi-upload"
											 styleClass="ui-button-help" ajax="false">
								<p:dataExporter type="pdf" target="dtchofer" fileName="choferes" />
							</p:commandButton>
						</p:toolbarGroup>
					</p:toolbar>
					<p:dataTable id="dt-chofer" widgetVar="dtchofer" var="chofer"
								 value="#{choferBean.listado_choferes}" reflow="true" paginator="true"
								 rows="10" paginatorPosition="bottom">
						<f:facet name="header">
							<div class="products-table-header">
								<span style="font-weight: bold" value="#{msgs.choferes}"></span> <span>
									class="filter-container ui-input-icon-left"> <i class="pi pi-search"></i>
								<p:inputText id="globalFilter" onkeyup="PF('dtchofer').filter()" placeholder="#{msgs.buscar}"/>
							</span>
							</div>
						</f:facet>
						<p:column headerText="#{msgs.chofer_nombre}" sortBy="#{chofer.nombre}" filterBy="#{chofer.nombre}">
							<h:outputText value="#{chofer.nombre}" />
						</p:column>
						<p:column headerText="#{msgs.ci}" sortBy="#{chofer.ci}"
								  filterBy="#{chofer.ci}">
							<h:outputText value="#{chofer.ci}" />
						</p:column>
						<p:column headerText="#{msgs.chofer_direccion}" sortBy="#{chofer.direccion}">
							<h:outputText value="#{chofer.direccion}" />
						</p:column>
						<p:column headerText="#{msgs.chofer_provincia}" sortBy="#{chofer.provincia}"
								  filterBy="#{chofer.provincia}">
							<h:outputText value="#{chofer.provincia}" />
						</p:column>
						<p:column headerText="#{msgs.chofer_marca}" sortBy="#{chofer.marca}"
								  filterBy="#{chofer.marca}">
							<h:outputText value="#{chofer.marca}" />
						</p:column>
						<p:column headerText="#{msgs.chofer_telefono}" sortBy="#{chofer.telefono}"
								  filterBy="#{chofer.telefono}">
							<h:outputText value="#{chofer.telefono}" />
						</p:column>
						<p:column exportable="false">
							<p:commandButton icon="pi pi-pencil" action="#{choferBean.openForEdit}"
											 update=":form:chofer-content"
											 oncomplete="PF('choferDialog').show()"
											 styleClass="edit-button rounded-button ui-button-success"
											 process="@this">
								<f:setPropertyActionListener value="#{chofer}"
															 target="#{choferBean.chofer_actual}" />
								<p:resetInput target=":form:chofer-content" />
							</p:commandButton>
							<p:commandButton class="ui-button-warning rounded-button"
											 icon="pi pi-trash" process="@this"
											 action="#{choferBean.eliminar_chofer()}" >
								<f:setPropertyActionListener value="#{chofer}"
															 target="#{choferBean.chofer_actual}" />
								<p:confirm header="#{msgs.confirmar}" message="#{msgs.message_confirmar_eliminar_marca}" icon="pi pi-exclamation-triangle"/>
							</p:commandButton>
						</p:column>

					</p:dataTable>

					<!-- ui:include es una etiqueta de facelet que permite incluir pages y de esta forma el code no se carga tanto -->
					<ui:include src="chofer_form.xhtml"></ui:include>

					<!-- Este comoponente se utiliza mucho para el caso de los eliminar, que es donde casi siempre se necesita confirmation,
                    su uso es bien sencillo, cada confirmDialog va atado a un p:confirm que es el que se definie dentro del button -->
					<p:confirmDialog global="true" showEffect="fade" width="300">
						<p:commandButton value="#{msgs.message_yes}" type="button"
										 styleClass="ui-confirmdialog-yes" icon="pi pi-check" />
						<p:commandButton value="#{msgs.message_no}" type="button"
										 styleClass="ui-confirmdialog-no ui-button-secondary"
										 icon="pi pi-times" />
					</p:confirmDialog>

				</div>
			</f:view>

		</h:form>
	</ui:define>
</ui:composition>
</html>